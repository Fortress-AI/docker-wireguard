#!/usr/bin/with-contenv bash

if [ $# -eq 0 ]
then
	echo "must have peer id as arg: add-peer.sh uid"
else

  if [ ! -f /config/wg0.conf ] || [ -z "$PEERS" ]; then
    echo "Wireguard is not set up in server mode"
    exit 0
  fi

  INTERNAL_SUBNET=${INTERNAL_SUBNET:-10.13.13.0}
  INTERFACE=$(echo "$INTERNAL_SUBNET" | awk 'BEGIN{FS=OFS="."} NF--')
  if [ -z "$SERVERURL" ] || [ "$SERVERURL" = "auto" ]; then
    SERVERURL=$(curl icanhazip.com)
  fi
  SERVERPORT=${SERVERPORT:-51820}
  if [ -z "$PEERDNS" ] || [ "$PEERDNS" = "auto" ]; then
    PEERDNS="${INTERFACE}.1"
  fi

  for i in {1..254}; do
    if grep -q "AllowedIPs = ${INTERFACE}.$(( $i + 1 ))/32" /config/wg0.conf; then
      echo "Peer $i exists"
    else
      echo "Adding new Peer $1"
      mkdir -p /config/peer${1}
      if [ ! -f /config/peer${1}/privatekey-peer${1} ]; then
        umask 077
        wg genkey | tee /config/peer${1}/privatekey-peer${1} | wg pubkey > /config/peer${1}/publickey-peer${1}
      fi
      eval "`printf %s`
      cat <<DUDE > /config/peer${1}/peer${1}.conf
  `cat /config/templates/peer.conf`
  DUDE"
      cat <<DUDE >> /config/wg0.conf
  [Peer]
  PublicKey = $(cat /config/peer${1}/publickey-peer${1})
  AllowedIPs = ${INTERFACE}.$(( $i + 1 ))/32

  DUDE
      echo "PUBLIC KEY: $(cat /config/peer${1}/publickey-peer${1})"
      echo "PEER ${i} QR code:"
      qrencode -t ansiutf8 < /config/peer${1}/peer${1}.conf
      qrencode -o /config/peer${1}/peer${1}.png < /config/peer${1}/peer${1}.conf
      chown -R abc:abc /config/peer${1}
      s6-svc -t /var/run/s6/services/wireguard
      break
    fi
  done

fi
